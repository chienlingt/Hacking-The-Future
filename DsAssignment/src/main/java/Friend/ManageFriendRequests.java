package Friend;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class ManageFriendRequests extends javax.swing.JFrame {
    
    Connection conn;
    DefaultListModel<String> friendRequestsModel;
    private String loggedInUsername;
    private String currentUserType;
    /**
     * Creates new form ManageFriendRequests
     */
    
    public ManageFriendRequests(){
        initComponents();
        this.setLocationRelativeTo(null); 
    }
    
    public ManageFriendRequests(String loggedInUsername, String currentUserType) {
        this.loggedInUsername = loggedInUsername;
        this.currentUserType = currentUserType;
        initComponents();
        this.setLocationRelativeTo(null); 
        friendRequestsModel = new DefaultListModel<>();
        jList1.setModel(friendRequestsModel);

        // Establish database connection
            conn = Database.MyDataBase.establishConnection();
            loadFriendRequests();
    }
    
    private void loadFriendRequests() {
        try {
            String query = "SELECT Friend_Requests FROM student WHERE Username=?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, loggedInUsername);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String friendRequestsString = rs.getString("Friend_Requests");
                if (friendRequestsString != null && !friendRequestsString.isEmpty()) {
                    String[] friendRequests = friendRequestsString.split(",");
                    friendRequestsModel.clear(); // Clear existing data
                    for (String friendRequest : friendRequests) {
                        friendRequestsModel.addElement(friendRequest);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Myanmar Text", 1, 18)); // NOI18N
        jLabel1.setText("Friend Request");

        jLabel2.setText("Username:");

        jButton1.setBackground(new java.awt.Color(243, 232, 232));
        jButton1.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N
        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(243, 232, 232));
        jButton2.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N
        jButton2.setText("Decline");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(236, 236, 252));
        jList1.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jButton3.setFont(new java.awt.Font("Myanmar Text", 0, 10)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(106, 106, 106)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selectedFriend = jList1.getSelectedValue();
        if (selectedFriend != null && !selectedFriend.isEmpty()) {
            acceptFriendRequest(selectedFriend);
            friendRequestsModel.removeElement(selectedFriend);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a friend request to accept.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedFriend = jList1.getSelectedValue();
        if (selectedFriend != null && !selectedFriend.isEmpty()) {
            deleteFriendRequest(selectedFriend);
            friendRequestsModel.removeElement(selectedFriend);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a friend request to decline.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose(); // Close the current window
        new Friends(loggedInUsername, currentUserType).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void acceptFriendRequest(String friendUsername) {
        try {
            // Prepare the update query for the current user
            String updateFriendRequestsQuery = "UPDATE student SET Friend_Requests = REPLACE(Friend_Requests, ?, ''), Friends = CONCAT(IFNULL(Friends, ''), ?) WHERE Username = ?";
            PreparedStatement updateFriendRequestsStmt = conn.prepareStatement(updateFriendRequestsQuery);
            updateFriendRequestsStmt.setString(1, friendUsername + ",");
            updateFriendRequestsStmt.setString(2, friendUsername + ",");
            updateFriendRequestsStmt.setString(3, loggedInUsername);

            // Execute the query for the current user
            updateFriendRequestsStmt.executeUpdate();

            // Prepare the update query for the friend
            String updateSentFriendsQuery = "UPDATE student SET sent_friends = REPLACE(sent_friends, ?, ''), Friends = CONCAT(IFNULL(Friends, ''), ?) WHERE Username = ?";
            PreparedStatement updateSentFriendsStmt = conn.prepareStatement(updateSentFriendsQuery);
            updateSentFriendsStmt.setString(1, loggedInUsername + ",");
            updateSentFriendsStmt.setString(2, loggedInUsername + ",");
            updateSentFriendsStmt.setString(3, friendUsername);

            // Execute the query for the friend
            updateSentFriendsStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Friend request accepted successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while accepting the friend request. Please try again.");
        }
    }




    private void deleteFriendRequest(String friendUsername) {
        try {
            // Prepare the update query to remove friend from Friend_Requests column in the current user's row
            String deleteFriendRequestsQuery = "UPDATE student SET Friend_Requests = REPLACE(Friend_Requests, ?, '') WHERE Username = ?";
            PreparedStatement deleteFriendRequestsStmt = conn.prepareStatement(deleteFriendRequestsQuery);
            deleteFriendRequestsStmt.setString(1, friendUsername + ",");
            deleteFriendRequestsStmt.setString(2, loggedInUsername);
  
            // Execute the query to update the current user's row
            deleteFriendRequestsStmt.executeUpdate();

            // Prepare the update query to remove the current user from sent_friends column in the friend's row
            String deleteSentFriendsQuery = "UPDATE student SET sent_friends = REPLACE(sent_friends, ?, '') WHERE Username = ?";
            PreparedStatement deleteSentFriendsStmt = conn.prepareStatement(deleteSentFriendsQuery);
            deleteSentFriendsStmt.setString(1, loggedInUsername + ",");
            deleteSentFriendsStmt.setString(2, friendUsername);

            // Execute the query to update the friend's row
            deleteSentFriendsStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Friend request deleted successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while deleting the friend request. Please try again.");
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFriendRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFriendRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFriendRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFriendRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFriendRequests().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
